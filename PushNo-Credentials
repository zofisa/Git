If not using SSH, following methods can be used:

Method1:
*****************

git-credential-store - Helper to store credentials on disk

  # git config --global credential.helper cache

The credential.helper cache value tells Git to keep your password cached in memory for a particular amount of minutes. The default is 15 minutes, you can set a longer timeout with:

  # git config --global credential.helper "cache --timeout=3600"

Which sets the cache for 1 hour, or:

  # git config --global credential.helper "cache --timeout=86400"

Note that: 
Using git config --global credential.helper store is not safe as it stores the Github password in clear text. For Linux, libsecret is an excellent alternative. 
For Ubuntu and some other linux distributions you can do the following:

Install:

sudo apt-get update
sudo apt install libsecret-1-0 libsecret-1-dev
sudo apt install gnome-keyring

Create

cd /usr/share/doc/git/contrib/credential/libsecret/
Sudo make 

Configure git to store passwords using libsecret

    # git config --global credentail.helper /usr/share/doc/git/contrib/credential/libsecret/git-credential-libsecret


if you're on Mac OS X and used Homebrew to install Git, you can use the native Mac OS X keystore with:

    # git config --global credential.helper osxkeychain

For Windows, there is a helper called Git Credential Manager for Windows or wincred in msysgit.

     # git config --global credential.helper manager


Method2:
******************
On Windows operating system You can use :

https://{Username}:{Password}@github.com/{Username}/{repo}.git

eg:

git clone https://{Username}:{Password}@github.com/{Username}/{repo}.git

git pull https://{Username}:{Password}@github.com/{Username}/{repo}.git

git remote add origin https://{Username}:{Password}@github.com/{Username}/{repo}.git

git push origin master

Method3:
*********************

git remote set-url --push origin https://<username>:<password>@github.com/<repo>



Reference : https://git-scm.com/docs/git-credential-store
